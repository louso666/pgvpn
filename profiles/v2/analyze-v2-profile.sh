#!/bin/bash

# –ê–Ω–∞–ª–∏–∑ JFR –ø—Ä–æ—Ñ–∏–ª—è IntelliJ IDEA v2
# –§–∞–π–ª: IU-252.23591.19_tema_06.07.2025_11.32.52.jfr

cd "$(dirname "$0")"

JFR_FILE="IU-252.23591.19_tema_06.07.2025_11.32.52.jfr"
ANALYSIS_FILE="intellij-v2-detailed-analysis.txt"

echo "üîç –î–ï–¢–ê–õ–¨–ù–´–ô –ê–ù–ê–õ–ò–ó –ü–†–û–§–ò–õ–Ø IntelliJ IDEA v2" > $ANALYSIS_FILE
echo "=============================================" >> $ANALYSIS_FILE
echo "–§–∞–π–ª: $JFR_FILE" >> $ANALYSIS_FILE
echo "–î–∞—Ç–∞ –∞–Ω–∞–ª–∏–∑–∞: $(date)" >> $ANALYSIS_FILE
echo "" >> $ANALYSIS_FILE

# –û–±—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ—Ñ–∏–ª–µ
echo "üìä –û–ë–©–ê–Ø –°–í–û–î–ö–ê –ü–†–û–§–ò–õ–Ø:" >> $ANALYSIS_FILE
echo "========================" >> $ANALYSIS_FILE
jfr summary $JFR_FILE >> $ANALYSIS_FILE 2>/dev/null || echo "–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–≤–æ–¥–∫–∏" >> $ANALYSIS_FILE
echo "" >> $ANALYSIS_FILE

# –¢–æ–ø –ø–æ—Ç–æ–∫–æ–≤ –ø–æ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏—é CPU
echo "üî• –¢–û–ü –ü–û–¢–û–ö–û–í –ü–û CPU (–¥–µ—Ç–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞):" >> $ANALYSIS_FILE
echo "=============================================" >> $ANALYSIS_FILE
jfr print --events jdk.ExecutionSample $JFR_FILE 2>/dev/null | grep -E "sampledThread|javaThreadName" | sort | uniq -c | sort -nr | head -30 >> $ANALYSIS_FILE
echo "" >> $ANALYSIS_FILE

# –î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –∫–∞–∂–¥–æ–≥–æ —Ç–æ–ø–æ–≤–æ–≥–æ –ø–æ—Ç–æ–∫–∞
echo "üñºÔ∏è  –î–ï–¢–ê–õ–¨–ù–´–ô –ê–ù–ê–õ–ò–ó AWT-EventQueue-0 (UI –ø–æ—Ç–æ–∫):" >> $ANALYSIS_FILE
echo "================================================" >> $ANALYSIS_FILE
jfr print --events jdk.ExecutionSample $JFR_FILE 2>/dev/null | awk '
/AWT-EventQueue-0/ {
    print "=== STACK TRACE ==="
    getline
    for(i=0; i<15 && getline; i++) {
        if(/^jdk\.ExecutionSample/) break
        print $0
    }
    print ""
}' | head -200 >> $ANALYSIS_FILE
echo "" >> $ANALYSIS_FILE

# –ê–Ω–∞–ª–∏–∑ TimerQueue –ø–æ—Ç–æ–∫–∞
echo "‚è∞ –î–ï–¢–ê–õ–¨–ù–´–ô –ê–ù–ê–õ–ò–ó TimerQueue –ø–æ—Ç–æ–∫–∞:" >> $ANALYSIS_FILE
echo "====================================" >> $ANALYSIS_FILE
jfr print --events jdk.ExecutionSample $JFR_FILE 2>/dev/null | awk '
/TimerQueue/ {
    print "=== STACK TRACE ==="
    getline
    for(i=0; i<15 && getline; i++) {
        if(/^jdk\.ExecutionSample/) break
        print $0
    }
    print ""
}' | head -200 >> $ANALYSIS_FILE
echo "" >> $ANALYSIS_FILE

# –ê–Ω–∞–ª–∏–∑ Kotlin –∫–æ—Ä—É—Ç–∏–Ω
echo "üöÄ –î–ï–¢–ê–õ–¨–ù–´–ô –ê–ù–ê–õ–ò–ó DefaultDispatcher –ø–æ—Ç–æ–∫–æ–≤ (Kotlin –∫–æ—Ä—É—Ç–∏–Ω—ã):" >> $ANALYSIS_FILE
echo "===============================================================" >> $ANALYSIS_FILE
jfr print --events jdk.ExecutionSample $JFR_FILE 2>/dev/null | awk '
/DefaultDispatcher/ {
    print "=== STACK TRACE ==="
    getline
    for(i=0; i<15 && getline; i++) {
        if(/^jdk\.ExecutionSample/) break
        print $0
    }
    print ""
}' | head -300 >> $ANALYSIS_FILE
echo "" >> $ANALYSIS_FILE

# –ê–Ω–∞–ª–∏–∑ GC –ø–æ—Ç–æ–∫–æ–≤
echo "üóëÔ∏è  –ê–ù–ê–õ–ò–ó GC –ø–æ—Ç–æ–∫–æ–≤:" >> $ANALYSIS_FILE
echo "=====================" >> $ANALYSIS_FILE
jfr print --events jdk.ExecutionSample $JFR_FILE 2>/dev/null | grep -A 10 -B 5 "GC" | head -100 >> $ANALYSIS_FILE
echo "" >> $ANALYSIS_FILE

# –ê–Ω–∞–ª–∏–∑ —Å–æ–±—ã—Ç–∏–π GC
echo "üóëÔ∏è  –°–û–ë–´–¢–ò–Ø –°–ë–û–†–ö–ò –ú–£–°–û–†–ê:" >> $ANALYSIS_FILE
echo "=========================" >> $ANALYSIS_FILE
jfr print --events jdk.GarbageCollection $JFR_FILE 2>/dev/null | head -50 >> $ANALYSIS_FILE
echo "" >> $ANALYSIS_FILE

# –ê–Ω–∞–ª–∏–∑ –∞–ª–ª–æ–∫–∞—Ü–∏–π –ø–∞–º—è—Ç–∏
echo "üíæ –ê–ù–ê–õ–ò–ó –ê–õ–õ–û–ö–ê–¶–ò–ô –ü–ê–ú–Ø–¢–ò:" >> $ANALYSIS_FILE
echo "===========================" >> $ANALYSIS_FILE
jfr print --events jdk.ObjectAllocationSample $JFR_FILE 2>/dev/null | head -50 >> $ANALYSIS_FILE
echo "" >> $ANALYSIS_FILE

# CPU Load –∞–Ω–∞–ª–∏–∑
echo "üìà –ê–ù–ê–õ–ò–ó –ó–ê–ì–†–£–ó–ö–ò CPU:" >> $ANALYSIS_FILE
echo "======================" >> $ANALYSIS_FILE
jfr print --events jdk.CPULoad $JFR_FILE 2>/dev/null | head -50 >> $ANALYSIS_FILE
echo "" >> $ANALYSIS_FILE

# –ê–Ω–∞–ª–∏–∑ JIT –∫–æ–º–ø–∏–ª—è—Ü–∏–∏
echo "‚ö° –ê–ù–ê–õ–ò–ó JIT –ö–û–ú–ü–ò–õ–Ø–¶–ò–ò:" >> $ANALYSIS_FILE
echo "========================" >> $ANALYSIS_FILE
jfr print --events jdk.Compilation $JFR_FILE 2>/dev/null | head -50 >> $ANALYSIS_FILE
echo "" >> $ANALYSIS_FILE

# –ê–Ω–∞–ª–∏–∑ –±–ª–æ–∫–∏—Ä–æ–≤–æ–∫
echo "üîí –ê–ù–ê–õ–ò–ó –ë–õ–û–ö–ò–†–û–í–û–ö (JavaMonitorEnter):" >> $ANALYSIS_FILE
echo "=======================================" >> $ANALYSIS_FILE
jfr print --events jdk.JavaMonitorEnter $JFR_FILE 2>/dev/null | head -50 >> $ANALYSIS_FILE
echo "" >> $ANALYSIS_FILE

# –ê–Ω–∞–ª–∏–∑ –ø–æ—Ç–æ–∫–æ–≤ –æ–∂–∏–¥–∞–Ω–∏—è
echo "üò¥ –ê–ù–ê–õ–ò–ó WAITING/BLOCKED –ø–æ—Ç–æ–∫–æ–≤:" >> $ANALYSIS_FILE
echo "==================================" >> $ANALYSIS_FILE
jfr print --events jdk.ThreadPark $JFR_FILE 2>/dev/null | head -50 >> $ANALYSIS_FILE
echo "" >> $ANALYSIS_FILE

# –ê–Ω–∞–ª–∏–∑ –∏—Å–∫–ª—é—á–µ–Ω–∏–π
echo "üí• –ê–ù–ê–õ–ò–ó –ò–°–ö–õ–Æ–ß–ï–ù–ò–ô:" >> $ANALYSIS_FILE
echo "===================" >> $ANALYSIS_FILE
jfr print --events jdk.JavaExceptionThrow $JFR_FILE 2>/dev/null | head -50 >> $ANALYSIS_FILE
echo "" >> $ANALYSIS_FILE

# –ê–Ω–∞–ª–∏–∑ —Ñ–∞–π–ª–æ–≤—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
echo "üìÅ –ê–ù–ê–õ–ò–ó –§–ê–ô–õ–û–í–´–• –û–ü–ï–†–ê–¶–ò–ô:" >> $ANALYSIS_FILE
echo "============================" >> $ANALYSIS_FILE
jfr print --events jdk.FileRead $JFR_FILE 2>/dev/null | head -30 >> $ANALYSIS_FILE
echo "" >> $ANALYSIS_FILE
jfr print --events jdk.FileWrite $JFR_FILE 2>/dev/null | head -30 >> $ANALYSIS_FILE
echo "" >> $ANALYSIS_FILE

# –ê–Ω–∞–ª–∏–∑ —Å–µ—Ç–µ–≤—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
echo "üåê –ê–ù–ê–õ–ò–ó –°–ï–¢–ï–í–´–• –û–ü–ï–†–ê–¶–ò–ô:" >> $ANALYSIS_FILE
echo "===========================" >> $ANALYSIS_FILE
jfr print --events jdk.SocketRead $JFR_FILE 2>/dev/null | head -30 >> $ANALYSIS_FILE
echo "" >> $ANALYSIS_FILE
jfr print --events jdk.SocketWrite $JFR_FILE 2>/dev/null | head -30 >> $ANALYSIS_FILE
echo "" >> $ANALYSIS_FILE

# –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Ç–∏–ø–∞–º —Å–æ–±—ã—Ç–∏–π
echo "üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ü–û –¢–ò–ü–ê–ú –°–û–ë–´–¢–ò–ô:" >> $ANALYSIS_FILE
echo "===============================" >> $ANALYSIS_FILE
jfr print $JFR_FILE 2>/dev/null | grep -E "^[a-z]" | sort | uniq -c | sort -nr | head -20 >> $ANALYSIS_FILE
echo "" >> $ANALYSIS_FILE

# –ê–Ω–∞–ª–∏–∑ –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π
echo "üìã –í–°–ï –î–û–°–¢–£–ü–ù–´–ï –°–û–ë–´–¢–ò–Ø –í –ü–†–û–§–ò–õ–ï:" >> $ANALYSIS_FILE
echo "==================================" >> $ANALYSIS_FILE
jfr print --events "*" $JFR_FILE 2>/dev/null | grep -E "^[a-z].*:" | sort | uniq | head -100 >> $ANALYSIS_FILE
echo "" >> $ANALYSIS_FILE

echo "‚úÖ –î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω! –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ $ANALYSIS_FILE"
echo ""
echo "üìã –ê–ù–ê–õ–ò–ó –ì–û–¢–û–í –ö –ü–ï–†–ï–î–ê–ß–ï –î–†–£–ì–û–ô –ú–û–î–ï–õ–ò" 